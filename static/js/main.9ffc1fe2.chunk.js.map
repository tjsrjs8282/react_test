{"version":3,"sources":["logo.svg","data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","PdDtail","useState","alert","alert변경","inputData","inputData변경","useParams","findPd","shoes","find","x","history","useHistory","useEffect","타이머","setTimeout","clearTimeout","className","onChange","e","target","value","src","width","onClick","goBack","PdCard","i","App","Data","shoesChange","Navbar","bg","expand","Container","fluid","Brand","href","Toggle","Offcanvas","placement","Header","closeButton","Title","Body","Nav","Link","as","to","NavDropdown","Item","Divider","Form","FormControl","type","placeholder","Button","variant","exact","path","map","a","axios","get","then","result","console","log","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9ffc1fe2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n      },\r\n    \r\n      {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n      },\r\n    \r\n      {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n      }\r\n]","import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss'\r\n\r\nlet 박스 = styled.div`\r\n    padding:20px;\r\n`;\r\nlet 제목 = styled.h4`\r\n    font-size:25px;\r\n    color : ${props => props.색상}\r\n`;\r\n\r\n\r\n\r\n/*\r\nclass Detail2 extends React.Component {\r\n    //이 컴포넌트가 보일때 실행\r\n    componentDidMount(){      \r\n    }\r\n\r\n    //이 컴포넌트가 사라질떄 실행\r\n    componentWillUnmount(){\r\n    }\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\n//useParams 파라미터값을 다 가져옴\r\n//고유의 id값을 찾아서 넣기\r\n//npm install node-sass\r\nfunction PdDtail(props){\r\n\r\n    \r\n\r\n    let [alert, alert변경] = useState(true);\r\n    let [inputData, inputData변경] = useState();\r\n\r\n\r\n    let { id } = useParams();\r\n    let findPd = props.shoes.find( x => {\r\n        return x.id == id\r\n    })\r\n\r\n    let history = useHistory();\r\n\r\n    //컴포넌트 보일때와 업데이트 될때 실행\r\n    //타임함수는 문제가 생길수있기 때문에 리턴으로 제거해줘야함\r\n    useEffect(()=>{\r\n        let 타이머 = setTimeout(()=>{ alert변경(false) }, 2000)\r\n        return ()=>{ clearTimeout(타이머) }\r\n    }, []);\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <박스>\r\n            <제목 className=\"red\">상세페이지</제목>\r\n        </박스>\r\n        <input onChange={ (e)=>{ inputData변경(e.target.value) }}/>\r\n\r\n        { inputData }\r\n\r\n        {\r\n            alert === true \r\n            ? (<div className=\"my-alert-yg\">\r\n                <p>재고가 얼마 남지 않았습니다.</p>\r\n                </div>) \r\n            : null\r\n        }\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n          </div>\r\n          <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{findPd.title}</h4>\r\n            <p>{findPd.content}</p>\r\n            <p>{findPd.price}</p>\r\n            <button className=\"btn btn-danger\">주문하기</button> \r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n                history.goBack();\r\n            }}>뒤로가기</button> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  //exprt 해서 함수 뱉기 \r\n  export default PdDtail;\r\n\r\n\r\n  \r\n  \r\n","/* eslint-disable */\nimport React, {useState} from 'react';\nimport logo from './logo.svg';\nimport { Navbar, Nav, Container, Form, Offcanvas, NavDropdown, FormControl, Button } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Detail from './Detail.js';\nimport axios from 'axios';\n\nimport {Link, Route, Switch} from 'react-router-dom';\n//npm install react-router-dom@5\n\n\n//리엑트에서는 Link 라는 태그와 to 속성으로 링크값을 준다.\n//Switch 는 Route 전체를 감싸면 감싸진 Route 중 택1만 나오게해줌.\nfunction App() {\n\n  let [shoes, shoesChange] = useState(Data);\n  return (\n    <div className=\"App\">\n     \n       <Navbar bg=\"light\" expand={false}>\n        <Container fluid>\n          <Navbar.Brand href=\"#\">Navbar Offcanvas</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"offcanvasNavbar\" />\n          <Navbar.Offcanvas\n            id=\"offcanvasNavbar\"\n            aria-labelledby=\"offcanvasNavbarLabel\"\n            placement=\"end\"\n          >\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title id=\"offcanvasNavbarLabel\">Offcanvas</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                <Nav.Link as={Link} to=\"/Detail/1\">Detail</Nav.Link>\n                <NavDropdown title=\"Dropdown\" id=\"offcanvasNavbarDropdown\">\n                  <NavDropdown.Item href=\"#action3\">Action</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action4\">Another action</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action5\">\n                    Something else here\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n              <Form className=\"d-flex\">\n                <FormControl\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  className=\"me-2\"\n                  aria-label=\"Search\"\n                />\n                <Button variant=\"outline-success\">Search</Button>\n              </Form>\n            </Offcanvas.Body>\n          </Navbar.Offcanvas>\n        </Container>\n      </Navbar>\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <div className=\"row\">\n              {\n                shoes.map( (a, i) => {\n                    return (\n                        <PdCard shoes={shoes[i]} i={i} key={i}/>\n                      )\n                  })\n              }\n            </div>\n            <button className=\"btn btn-primary\" onClick={()=>{\n              //로딩중 ui은 여기에 \n              \n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                console.log(result.data)\n                shoesChange([...shoes, ...result.data])\n\n                \n              })\n              .catch(()=>{\n                console.log('더보기 실패')\n              })\n            }}>더보기</button>\n          </div>\n         \n        </Route>\n\n        \n\n\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes}/>\n\n        </Route>\n      </Switch>        \n\n      \n    </div>\n  );\n}\n\n\n\nfunction PdCard (props){\n  return (\n    <div className=\"col-md-4\">\n        <img src={'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg'} />\n        <h4>{props.shoes.title}</h4>\n        <p>{props.shoes.content} & {props.shoes.price}</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\n//라우터셋팅하는 법 import {BrowserRouter} from 'react-router-dom';.\n\n//BrowserRouter 태그로 감싼다. HashRouter 도 가능 차이점은 /# 붙냐안붙냐 (안정성)\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"\">\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}